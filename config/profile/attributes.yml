audit_cookies: >
  Audits cookie inputs that are set by HTTP responses, meta HTML tags or JavaScript.
audit_cookies_extensively:
    description: 'Submits all links and forms of the page along with the cookie permutations.'
    warning: "Enabling this option severely increase the scan duration."
audit_forms: 'Audits inputs grouped by HTML form elements.'
audit_headers: >
    Audits common HTTP request headers as well as custom headers extracted from
    browser requests.
audit_links: 'Audits inputs specified in link parameters.'
audit_ui_forms: >
  Audits input/button groups that do not belong to an HTML form but are instead
  associated via JavaScript code.
audit_ui_inputs: >
  Audits orphan input elements with associated DOM events.
audit_xmls: 'Audits XML inputs extracted from browser requests.'
audit_jsons: 'Audits JSON inputs extracted from browser requests.'
audit_link_templates: 'Regular expressions with named captures to use to extract input information from generic paths.'
audit_exclude_vector_patterns: 'Excludes input vectors whose name matches the given patterns from the audit.'
audit_include_vector_patterns: 'Only includes input vectors whose name matches the given patterns in the audit.'
audit_with_both_http_methods:
    description: 'Audits elements with both GET and POST requests.'
    warning: 'Will double the scan-time.'
audit_parameter_names:
    description: 'Inject payloads into parameter names as well.'
audit_with_extra_parameter:
    description: 'Injects an extra parameter to available combinations to test cases of dynamic handling.'

input_values: 'Sample values to use to fill in web application inputs.'

no_fingerprinting:
    description: 'Disables automated platform fingerprinting.'
    warning: 'If this option is selected and no platforms have been explicitly specified, the scanner will always inject all available payloads.'

scope_exclude_file_extensions: >
  Will not process resources with the specified file extensions.
scope_auto_redundant_paths:
    description: 'Limits the amount of times URLs with identical query parameter names will be followed.'
    notice: 'Helps avoid auditing pages like calendars and catalogs over and over.'
scope_depth_limit: 'Limits how deep the crawler can go into the structure of the web application.'
scope_directory_depth_limit: 'Limits how deep the crawler can go into the directory structure of the web application.'
scope_exclude_path_patterns: 'Excludes crawling and auditing URLs which match the given patterns.'
scope_exclude_binaries:
    description: 'Excludes pages with a non-text content type from the audit.'
    notice: 'Binary content may fool pattern matching passive checks into logging false positives.'
scope_exclude_content_patterns: 'Excludes pages whose content matches any of the given patterns.'
scope_dom_depth_limit: 'How deep to go into the DOM tree of each page, for pages with JavaScript code.'
scope_url_rewrites: 'Rewrites URLs based on the given rules.'
scope_extend_paths: 'Uses the provided list of paths to extend the scope of the crawl.'
scope_include_subdomains: 'Allows the crawler to follow paths to subdomains.'
scope_include_path_patterns: 'Only crawls and audits URLs matching the given patterns.'
scope_page_limit: 'Limits the amount of pages to crawl and audit.'
scope_https_only: 'Only follow HTTPS URLs.'
scope_template_path_patterns: >
  Limits processing of redundant pages which are based on common templates (like blog
  posts, galleries, catalogs etc.).
scope_restrict_paths: 'Uses the given paths instead of crawling.'

http_request_headers: 'Adds custom headers to every HTTP request.'
http_request_concurrency:
    description: 'Maximum HTTP request concurrency.'
    notice: >
      If the web server is powerful and responsive, a high setting will lead to
      a much faster scan; for a less powerful server however, a lower setting is recommended.
    warning: 'Using a very high concurrency setting could kill the web server and lead to corrupted results.'
http_request_queue_size:
    description: 'Maximum amount of HTTP requests to keep in the queue.'
    notice: 'More means better scheduling and better performance, fewer means less RAM consumption.'
http_proxy_host: 'Hostname or IP address of the proxy server to use.'
http_proxy_password: 'Proxy server password.'
http_proxy_port: 'Proxy server port.'
http_proxy_type: 'Proxy server type.'
http_proxy_username: 'Proxy server username.'
http_request_redirect_limit: 'Limits the amount of total redirects to be followed.'
http_response_max_size:
    description: 'Maximum size of acceptable remote resources (in bytes).'
    notice: 'Large responses (in the MB range) can greatly increase memory consumption, you can use this option as a safeguard.'
device_user_agent: 'User-agent string to be used for browser identification.'
http_request_timeout: 'HTTP request timeout (in milliseconds).'

session_check_pattern: >
  Pattern used to verify that the scanner is still logged in to the web application.
  Should match the contents of the check URL's HTTP response body, to determine
  whether or not the scanner is logged in to the web application.
session_check_url: >
  URL used to verify that the scanner is still logged in to the web application.
  When requested, the contents of HTTP response body must be matched by the
  check pattern.

dom_wait_for_elements: >
  Waits for elements matching the given CSS selectors to appear, when visiting
  a page whose URL matches the given patterns.
dom_pool_size: 'Amount of browser workers to keep in the pool and put to work.'
dom_job_timeout: 'Maximum allowed time for each job in seconds.'
dom_worker_time_to_live: 'Time-to-summary of each browser (before re-spawning) counted in jobs.'
dom_ignore_images:
  notice: >
    If images don't play a part in the functionality of the web application it's
    better to enable this option. Doing so will result in a faster scan and
    less bandwidth usage.
device_width: ''
device_height: ''

max_parallel_scans: 'Maximum number of active scans at any given time.'
scan_mode: 'How extensive should the audit process be -- affects the amount of payloads sent to the web application.'
